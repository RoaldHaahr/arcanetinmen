@model ArcaneTinmen.ViewModels.ShippingDetails
@{
    ViewBag.Title = "BoardGamesStore: Checkout";
}
<section class="section" style="padding-top:60px">
    <div style="padding:40px"class="modal div.form">
        <h2>Check out now</h2>
        <p style="color:white; font-size:1.5em;">Please enter your details, and we'll ship your goods right away!</p>
        @using (Html.BeginForm())
        {
           @Html.AntiForgeryToken()

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>

                <div class="input-field" style="padding-top:20px">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })                   
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                              
                    <input type="submit" value="Create" class="btn-cta-orange" />
        }
    </div>
</section>


